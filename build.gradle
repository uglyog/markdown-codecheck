plugins {
  // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
  id 'java-gradle-plugin'
  id 'org.jetbrains.kotlin.jvm' version '1.3.71'
  id 'groovy'
  id 'codenarc'
  id 'org.jmailen.kotlinter' version '2.3.2'
  id 'io.gitlab.arturbosch.detekt' version '1.7.4'
  id 'maven-publish'
}

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}

targetCompatibility = '1.8'
sourceCompatibility = '1.8'
version = '0.0.0'
group = 'com.github.uglyog'

dependencies {
  // Align versions of all Kotlin components
  implementation platform('org.jetbrains.kotlin:kotlin-bom')

  // Use the Kotlin JDK 8 standard library.
  implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

  testCompile "org.codehaus.groovy:groovy:2.5.11"
  testCompile('org.spockframework:spock-core:2.0-M2-groovy-2.5') {
    exclude group: 'org.codehaus.groovy'
  }
  testRuntime "net.bytebuddy:byte-buddy:1.10.8"
  testRuntime 'org.objenesis:objenesis:3.1'
}

gradlePlugin {
  // Define the plugin
  plugins {
    markdown_codecheck {
      id = 'com.github.uglyog.markdown-codecheck'
      implementationClass = 'com.github.uglyog.markdowncodecheck.MarkdownCodecheckPlugin'
    }
  }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

test {
  useJUnitPlatform()
}

// Add a task to run the functional tests
task functionalTest(type: Test) {
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
  useJUnitPlatform()
}

check {
  // Run the functional tests as part of `check`
  dependsOn(tasks.functionalTest)
}

codenarcMain {
  configFile = rootProject.file('config/codenarc/ruleset.groovy')
}

codenarcTest {
  configFile = rootProject.file('config/codenarc/rulesetTest.groovy')
}

codenarcFunctionalTest {
  configFile = rootProject.file('config/codenarc/rulesetTest.groovy')
}

kotlinter {
  indentSize = 2
}

detekt {
  failFast = false
  config = files(rootProject.file("config/detekt-config.yml"))
}
