plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'

    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
}

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}

dependencies {
  // Align versions of all Kotlin components
  implementation platform('org.jetbrains.kotlin:kotlin-bom')

  // Use the Kotlin JDK 8 standard library.
  implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

  // Use the Kotlin test library.
  testImplementation 'org.jetbrains.kotlin:kotlin-test'

  // Use the Kotlin JUnit integration.
  testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

gradlePlugin {
    // Define the plugin
    plugins {
        greeting {
            id = 'markdown.codecheck.greeting'
            implementationClass = 'markdown.codecheck.MarkdownCodecheckPlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}
